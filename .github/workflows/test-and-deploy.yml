name: Test & Deployment
on:
  pull_request:
    branches:
      - develop
jobs:

  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests
        run: mvn compile test

  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    name: Build the image, push and deploy it to GCP
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: java-crud-gh-actions
      PROJECT_ID: gh-actions-403902
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/562977656557/locations/global/workloadIdentityPools/gh-actions-pool/providers/github'
          service_account: 'github-actions@gh-actions-403902.iam.gserviceaccount.com'

      - name: Run one more command to authenticate to GCP
        run: |-
          echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" | base64 --decode | docker login -u _json_key --password-stdin https://gcr.io

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Push Docker Image to Container Registry (GCR)
        run: |-
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest

      - id: deploy
        name: Deploy the application image to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: "${{ env.IMAGE_NAME }}"
          image: "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest"
          flags: '--allow-unauthenticated'

      - name: Show deployed application URL
        run: 'curl "${{ steps.deploy.outputs.url }}"'

    outputs:
      apiUrl: ${{ steps.deploy.outputs.url }}

  e2e:
    name: Run e2e Tests
    needs: build-and-deploy
    runs-on: ubuntu-22.04
    steps:
      - name: Get code
        uses: actions/checkout@v3
        with:
          repository: brunosantanati/e2e-gh-actions
          ref: main

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests
        run: 'mvn -DargLine="-DAPI_URL=${{ needs.build-and-deploy.outputs.apiUrl }}" compile test'

  report:
    name: Generate CSV report with products
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Generate report
        uses: brunosantanati/report-gh-actions@v2.9
        with:
          apiUrl: ${{ needs.build-and-deploy.outputs.apiUrl }}
